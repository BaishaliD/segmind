[{"D:\\CodingNinjas\\WebD\\segmind\\src\\index.js":"1","D:\\CodingNinjas\\WebD\\segmind\\src\\reportWebVitals.js":"2","D:\\CodingNinjas\\WebD\\segmind\\src\\App.js":"3","D:\\CodingNinjas\\WebD\\segmind\\src\\Gallery.js":"4","D:\\CodingNinjas\\WebD\\segmind\\src\\ImageDetector.js":"5","D:\\CodingNinjas\\WebD\\segmind\\src\\Navbar.js":"6","D:\\CodingNinjas\\WebD\\segmind\\src\\Homepage.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":4138,"mtime":1611603549699,"results":"11","hashOfConfig":"9"},{"size":1525,"mtime":1611667069031,"results":"12","hashOfConfig":"9"},{"size":3407,"mtime":1611667069030,"results":"13","hashOfConfig":"9"},{"size":330,"mtime":1611579878042,"results":"14","hashOfConfig":"9"},{"size":2142,"mtime":1611602934572,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ofhu3r",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"D:\\CodingNinjas\\WebD\\segmind\\src\\index.js",[],["33","34"],"D:\\CodingNinjas\\WebD\\segmind\\src\\reportWebVitals.js",[],"D:\\CodingNinjas\\WebD\\segmind\\src\\App.js",["35","36","37","38","39","40","41"],"import React from \"react\";\nimport Navbar from './Navbar';\nimport Gallery from \"./Gallery\";\nimport ImageDetector from \"./ImageDetector\";\nimport Homepage from './Homepage';\nimport './App.css';\nimport {Route, BrowserRouter as Router, Link} from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data : null,\n      displayImages: false,\n      selectedImage: null,\n      showCanvas: false,\n      fileInput : false,\n      demoDataInput : false,\n    };    \n  } \n\n  handleChange = (event) => {\n    this.setState({ data: JSON.parse(event.target.value) });\n  } \n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if(this.state.fileInput==true)\n      this.uploadFile();\n    else if (this.state.demoDataInput==true){ \n      this.useDemoData();     \n    }    \n  }\n\n  useDemoData = async () => {\n    const res = await fetch('https://api.jsonbin.io/b/600dc2edd4d77374a3f42c2d');\n    const demoData = await res.json();\n    this.setState({data : demoData, displayImages: true});\n  } \n\n  uploadFile = () => {\n    var upload = document.getElementById('fileInput');  \n    // Make sure the DOM element exists and the file is uploaded\n    if (upload && upload.files.length>0) \n    {\n        // Make sure a file was selected\n          var reader = new FileReader(); // File reader to read the file           \n          // This event listener will happen when the reader has read the file\n          reader.addEventListener('load', () => {\n            var result = JSON.parse(reader.result); // Parse the result into an object \n            this.setState({ data: result, displayImages: true});\n          });\n          \n          reader.readAsText(upload.files[0]); // Read the uploaded file\n    }\n  }\n\n  // hideLabels = (annotations) => {\n  //   this.renderCanvas(this.state.selectedImage,annotations);\n  // }\n\n\n  render() {\n    const { data, displayImages, selectedImage, showCanvas, fileInput, demoDataInput } = this.state;\n    return (\n      <Router>\n            <div>\n            <Navbar/>\n            {/* <Homepage\n              fileInput={fileInput}\n              demoDataInput={demoDataInput}\n              displayImages={displayImages}\n              data={data}\n              handleSubmit={this.handleSubmit}\n            /> */}\n            <div style={{backgroundColor: 'lightGray', padding: '20px 0'}}>\n                <h1>Object Detection</h1>\n                <h2>\n                  Upload a JSON file (in COCO JSON format), or use our <a href=\"https://api.jsonbin.io/b/600dc2edd4d77374a3f42c2d\" target=\"_blank\">demo dataset</a>. \n                </h2>\n                <div className={'flex mb-20'}>\n                    <button onClick={() => {this.setState({ fileInput: true, demoDataInput: false });}}>Upload JSON</button>\n                    <button onClick={() => {this.setState({ demoDataInput: true, fileInput: false });}}>Use Demo Dataset</button>  \n                </div>        \n                <div>\n                  {fileInput ? (\n                    <div className={'flex mb-20'}>\n                      <input type=\"file\" id=\"fileInput\"></input>\n                    </div>            \n                  ) : ('')}\n                  {demoDataInput ? (\n                    <h3>Demo file uploaded. Please press Submit.</h3>\n                  ) : ('')}\n                </div>\n                <div className={'flex mb-20'}>\n                  <button onClick={this.handleSubmit}>Submit</button>\n                </div>\n            </div>\n    \n            {displayImages ? (\n              <Gallery dataRaw={data} images={data.images} />\n            ) : (\n              \"\"\n            )}\n            {/* {showCanvas ? (\n              <ImageDetector\n                selectedImage={selectedImage}\n                annotations={data.annotations}\n                renderCanvas={this.renderCanvas}\n                showLabels={this.showLabels}\n                hideLabels={this.hideLabels}\n              />\n            ) : (\n              \"\"\n            )} */}\n          </div>\n      <Route path=\"/canvas\" component={ImageDetector}/>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","D:\\CodingNinjas\\WebD\\segmind\\src\\Gallery.js",["42","43","44","45","46","47"],"D:\\CodingNinjas\\WebD\\segmind\\src\\ImageDetector.js",["48","49","50","51","52"],"D:\\CodingNinjas\\WebD\\segmind\\src\\Navbar.js",[],"D:\\CodingNinjas\\WebD\\segmind\\src\\Homepage.js",["53","54","55"],"import React from 'react';\r\nimport Gallery from './Gallery';\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }   \r\n\r\n    render(){\r\n        const {fileInput, demoDataInput, displayImages, data, handleSubmit} = this.props;\r\n        return(\r\n            <div>\r\n            <div style={{backgroundColor: 'lightGray', padding: '20px 0'}}>\r\n                <h1>Object Detection</h1>\r\n                <h2>\r\n                  Upload a JSON file (in COCO JSON format), or use our <a href=\"https://api.jsonbin.io/b/600dc2edd4d77374a3f42c2d\" target=\"_blank\">demo dataset</a>. \r\n                </h2>\r\n                <div className={'flex mb-20'}>\r\n                    <button onClick={() => {this.setState({ fileInput: true, demoDataInput: false });}}>Upload JSON</button>\r\n                    <button onClick={() => {this.setState({ demoDataInput: true, fileInput: false });}}>Use Demo Dataset</button>  \r\n                </div>        \r\n                <div>\r\n                  {fileInput ? (\r\n                    <div className={'flex mb-20'}>\r\n                      <input type=\"file\" id=\"fileInput\"></input>\r\n                    </div>            \r\n                  ) : ('')}\r\n                  {demoDataInput ? (\r\n                    <h3>Demo file uploaded. Please press Submit.</h3>\r\n                  ) : ('')}\r\n                </div>\r\n                <div className={'flex mb-20'}>\r\n                  <button onClick={this.handleSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n    \r\n            {displayImages ? (\r\n              <Gallery dataRaw={data} images={data.images} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/* {showCanvas ? (\r\n              <ImageDetector\r\n                selectedImage={selectedImage}\r\n                annotations={data.annotations}\r\n                renderCanvas={this.renderCanvas}\r\n                showLabels={this.showLabels}\r\n                hideLabels={this.hideLabels}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":7,"column":41,"nodeType":"62","messageId":"63","endLine":7,"endColumn":45},{"ruleId":"65","severity":1,"message":"66","line":29,"column":28,"nodeType":"67","messageId":"68","endLine":29,"endColumn":30},{"ruleId":"65","severity":1,"message":"66","line":31,"column":38,"nodeType":"67","messageId":"68","endLine":31,"endColumn":40},{"ruleId":"60","severity":1,"message":"69","line":65,"column":34,"nodeType":"62","messageId":"63","endLine":65,"endColumn":47},{"ruleId":"60","severity":1,"message":"70","line":65,"column":49,"nodeType":"62","messageId":"63","endLine":65,"endColumn":59},{"ruleId":"71","severity":1,"message":"72","line":80,"column":72,"nodeType":"73","endLine":80,"endColumn":148},{"ruleId":"60","severity":1,"message":"74","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"75","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":21},{"ruleId":"60","severity":1,"message":"76","line":5,"column":9,"nodeType":"62","messageId":"63","endLine":5,"endColumn":14},{"ruleId":"60","severity":1,"message":"77","line":5,"column":33,"nodeType":"62","messageId":"63","endLine":5,"endColumn":39},{"ruleId":"60","severity":1,"message":"64","line":5,"column":41,"nodeType":"62","messageId":"63","endLine":5,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":24,"column":20,"nodeType":"73","endLine":24,"endColumn":198},{"ruleId":"60","severity":1,"message":"80","line":8,"column":9,"nodeType":"62","messageId":"63","endLine":8,"endColumn":17},{"ruleId":"60","severity":1,"message":"81","line":26,"column":9,"nodeType":"62","messageId":"63","endLine":26,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":32,"column":28,"nodeType":"67","messageId":"68","endLine":32,"endColumn":30},{"ruleId":"60","severity":1,"message":"81","line":85,"column":9,"nodeType":"62","messageId":"63","endLine":85,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":91,"column":28,"nodeType":"67","messageId":"68","endLine":91,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":7,"endColumn":6},{"ruleId":"60","severity":1,"message":"86","line":10,"column":63,"nodeType":"62","messageId":"63","endLine":10,"endColumn":75},{"ruleId":"71","severity":1,"message":"72","line":16,"column":72,"nodeType":"73","endLine":16,"endColumn":148},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedImage' is assigned a value but never used.","'showCanvas' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useEffect' is defined but never used.","'ImageDetector' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'imageUrl' is assigned a value but never used.","'raster' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]